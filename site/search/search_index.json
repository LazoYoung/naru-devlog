{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"2024/06/24/concurrent-computing/","title":"Concurrent Computing","text":"<p>\ubcd1\ud589(\ub3d9\uc2dc) \ucef4\ud4e8\ud305\uc740 \uc5ec\ub7ec \uc5f0\uc0b0\uc744 \uc21c\ucc28\uc801\uc73c\ub85c \ucc98\ub9ac\ud558\uc9c0 \uc54a\uace0 \ub3d9\uc2dc\uc5d0 \ubcd1\ud589 \ucc98\ub9ac\ud558\ub294 \ubc29\uc2dd\uc774\ub2e4.</p>"},{"location":"2024/06/24/concurrent-computing/#thread","title":"Thread","text":"<p>\ub3c5\ub9bd\uc801\uc778 CPU \uc2dc\uac04\uacfc \uba54\ubaa8\ub9ac \uacf5\uac04\uc744 \uc810\uc720\ud558\ub294 \ud504\ub85c\uc138\uc2a4\uc640 \ub2ec\ub9ac \uc4f0\ub808\ub4dc\ub294 \ud558\ub098\uc758 \uc790\uc6d0\uc744 \uacf5\uc720\ud55c\ub2e4.</p> <p>Word\uc640 Chrome \ud504\ub85c\uc138\uc2a4\ub294 \uc11c\ub85c \ub3d9\uc2dc\uc5d0 \uc2e4\ud589\ub418\uc9c0\ub3c4 \uc54a\uc73c\uba70, \uba54\ubaa8\ub9ac\ub97c \uacf5\uc720\ud558\uc9c0\ub3c4 \uc54a\ub294\ub2e4. \ud558\uc9c0\ub9cc \uc5ec\ub7ec \uc4f0\ub808\ub4dc\ub294 heap \uba54\ubaa8\ub9ac\ub97c \uacf5\uc720\ud558\uae30 \ub54c\ubb38\uc5d0 \uc804\uc5ed \ubcc0\uc218\uc640 \ucf54\ub4dc\ub97c \ub3d9\uc2dc\uc5d0 \uc811\uadfc\ud560 \uc218 \uc788\ub2e4.</p> <p>\uc77c\ubc18\uc801\uc73c\ub85c \ucf54\ub4dc\ub294 <code>main()</code> \ud568\uc218\ubd80\ud130 \uc21c\ucc28\uc801\uc73c\ub85c \uc2e4\ud589\ub418\uae30 \ub54c\ubb38\uc5d0 \ubaa8\ub4e0 \uc791\uc5c5\uc774 \ub3d9\uae30\ud654\ub418\uc5b4 \uc788\ub2e4. \ud558\uc9c0\ub9cc \uc4f0\ub808\ub4dc\ub97c \uc0ac\uc6a9\ud558\uba74 \ub2e4\ub978 \uc5f0\uc0b0\uacfc \ubcd1\ud589\ud558\uba74\uc11c \uc77c\uc744 \ub3d9\uc2dc\uc5d0 \ucc98\ub9ac\ud558\ub294 \uc774\uc810\uc774 \uc0dd\uae34\ub2e4.</p>"},{"location":"2024/06/24/concurrent-computing/#concurrency","title":"Concurrency","text":"<p>\uc77c\uc744 \ub3d9\uc2dc\uc5d0(concurrently) \ucc98\ub9ac\ud55c\ub2e4\ub294 \uac83\uc744 \uc774\ud574\ud558\uae30 \uc704\ud574 \ucef4\ud4e8\ud130\uad6c\uc870\ub97c \ub4e4\uc5ec\ub2e4\ubcf4\uc790.</p> <p>\ud568\uc218 \uc548\uc5d0\uc11c \uc9c0\uc5ed\uc801 \uc5f0\uc0b0 \uacfc\uc815\uacfc \uacb0\uacfc\ub97c \ub2f4\ub294 \ub808\uc9c0\uc2a4\ud130, \uc2a4\ud0dd \uba54\ubaa8\ub9ac\ub294 \uac01 \uc4f0\ub808\ub4dc\uc5d0 \ub3c5\ub9bd\uc801\uc73c\ub85c \ud560\ub2f9\ub41c\ub2e4. \ubc18\uba74 \ud504\ub85c\uc138\uc2a4 \uc0dd\uba85\uc8fc\uae30\uc5d0 \uac78\uccd0 \uc601\uc18d\uc801\uc778 \ud799 \uba54\ubaa8\ub9ac\uc640 \uc804\uc5ed \ubcc0\uc218\ub294 \uc5b4\ub5a4 \uc704\uce58\uc5d0\uc11c\ub4e0 \uc811\uadfc\ud560 \uc218 \uc788\uc5b4\uc57c \ub418\uae30 \ub54c\ubb38\uc5d0 \ubaa8\ub4e0 \uc4f0\ub808\ub4dc\uac00 \uacf5\uc720\ud558\ub294 \ud615\ud0dc\uc774\ub2e4.</p>"},{"location":"2024/06/24/concurrent-computing/#race-condition","title":"Race condition","text":"<p>\uc5b4\ub5a4 \uc2dc\uc2a4\ud15c\uc5d0 \uc785\ub825\ub418\ub294 \ubcf5\uc218\uc758 \uc2e0\ud638\ub97c \uc870\uc791\ud558\ub294 \ud0c0\uc774\ubc0d, \uc21c\uc11c\uc5d0 \ub530\ub77c \uacb0\uacfc\uac00 \uc601\ud5a5\uc744 \ubc1b\ub294\ub2e4\uba74 \uacbd\uc7c1 \uc0c1\ud0dc\uc5d0 \ub193\uc5ec\uc788\ub2e4\uace0 \ubcf8\ub2e4. </p> <p>\ubcd1\ub82c \ucef4\ud4e8\ud305 \uad00\uc810\uc5d0\uc11c \uacbd\uc7c1 \uc0c1\ud0dc\ub97c \uc124\uba85\ud558\uba74 \uc5ec\ub7ec \uc4f0\ub808\ub4dc\uac00 \ubcc0\uc218\ub97c \uacf5\uc720\ud560 \ub54c \uc77c\uc815 \uc870\uac74\uc774\ub098 \ud0c0\uc774\ubc0d\uc5d0\uc11c \ud504\ub85c\uadf8\ub7a8\uc774 \uc624\uc791\ub3d9\ud558\uac70\ub098 \uc608\uc0c1\uacfc \ub2e4\ub978 \uacb0\uacfc\ub97c \ub9cc\ub4e4\uc5b4\ub0bc \uc218 \uc788\ub2e4. \uacbd\uc7c1 \uc0c1\ud0dc\ub97c \ubc29\uc9c0\ud558\ub294 \ub370 \uc0ac\uc6a9\ub418\ub294 \uae30\ubc95\uc73c\ub85c \uc0c1\ud638\ubc30\uc81c, \ub3d9\uae30\ud654 \ub4f1\uc774 \uc788\ub2e4.</p>"},{"location":"2024/06/24/concurrent-computing/#mutual-exclusion","title":"Mutual exclusion","text":"<p>Mutual exclusion(\uc0c1\ud638 \ubc30\uc81c)\ub294 \ud2b9\uc815 \uc790\uc6d0\uc758 \ub3d9\uc2dc \uc811\uadfc\uc744 \uc81c\ud55c\ud558\ub294 \uae30\uc220\uc774\ub2e4.</p>"},{"location":"2024/06/24/concurrent-computing/#critical-section","title":"Critical section","text":"<p>\uc790\uc6d0\uc5d0 \uc811\uadfc\ud558\ub294 \ucf54\ub4dc\ub294 critical section(\uc784\uacc4 \uc601\uc5ed)\uc73c\ub85c \uc124\uc815\ud558\uace0, \uc544\ub798 \uc870\uac74\uc744 \ucda9\uc871\ud574\uc57c \ud55c\ub2e4.</p> <ol> <li>\uc0c1\ud638\ubc30\uc81c - \ud55c \ud504\ub85c\uc138\uc2a4\uac00 \uc810\uc720 \uc911\uc77c \ub54c \ub2e4\ub978 \ud504\ub85c\uc138\uc2a4\ub294 \ub4e4\uc5b4\uac08 \uc218 \uc5c6\ub2e4.</li> <li>\uc9c4\ud589 - \uc9c4\uc785\ud558\ub824\ub294 \ud504\ub85c\uc138\uc2a4\uac00 \uc5ec\ub7ec \uac1c\uc77c \ub54c \ub204\uac00 \uba3c\uc800 \ub4e4\uc5b4\uac08 \uc9c0 \uacb0\uc815\ud574\uc57c \ud55c\ub2e4.</li> <li>\ud55c\uc815 \ub300\uae30 - \uc784\uacc4 \uc601\uc5ed \uc55e\uc5d0\uc11c \ub300\uae30\ud558\ub294 \ud504\ub85c\uc138\uc2a4\ub294 \uc601\uc6d0\ud788 \ub300\uae30\ud560 \uc218 \uc5c6\ub2e4.</li> </ol> <p>\uc784\uacc4 \uc601\uc5ed\uc744 \uad6c\ud604\ud558\ub294 \uae30\ubc95\uc73c\ub85c <code>Mutex</code>, <code>Semaphore</code>, <code>Monitor</code>\uac00 \uc788\ub2e4.</p>"},{"location":"2024/06/24/concurrent-computing/#mutex","title":"Mutex","text":"<p>Condition variable(\uc870\uac74 \ubcc0\uc218)\ub97c \ud65c\uc6a9\ud558\uc5ec consumer \ud328\ud134 \uc0c1\ud638\ubc30\uc81c\ub97c \uad6c\ud604\ud55c C \ucf54\ub4dc</p> <pre><code>static pthread_mutex_t mtx = PTHREAD_MUTEX_INITIALIZER;\nstatic pthread_cond_t cond = PTHREAD_COND_INITIALIZER;\n\nstatic int avail = 0;\n\n// Consumer pattern\nwhile (TRUE) {\n    s = pthread_mutex_lock(&amp;mtx);\n\n    while (avail == 0) {  // Wait for something to consume\n       s = pthread_cond_wait(&amp;cond, &amp;mtx);\n    }\n\n    while (avail &gt; 0) {  // Consume all available units \n        avail--;\n    }\n\n    s = pthread_mutex_unlock(&amp;mtx);\n}\n</code></pre>"},{"location":"2024/06/24/concurrent-computing/#parallel-computing","title":"Parallel Computing","text":"<p>\ubcd1\ub82c \ucef4\ud4e8\ud305\uc740 \ub2e4\uc218\uc758 \ud504\ub85c\uc138\uc11c\ub97c \ub3d9\uc2dc\uc5d0 \uc0ac\uc6a9\ud558\uc5ec \uc5f0\uc0b0\ud558\ub294 \ubc29\ubc95\uc73c\ub85c, \ub290\ub824\ud130\uc9c4 \uc9c1\ub82c \uc5f0\uc0b0\uc744 \uac1c\uc120\ud558\ub294 \ubd80\ubd84\uc5d0\uc11c \ub3d9\uc2dc \ucef4\ud4e8\ud305\uacfc \uc720\uc0ac\ud558\uc9c0\ub9cc \ucf54\uc5b4\ub07c\ub9ac \uc790\uc6d0\uc744 \uacf5\uc720\ud558\uc9c0 \uc54a\uace0 \ub3c5\ub9bd\uc801\uc73c\ub85c \ucc98\ub9ac\ud55c\ub2e4\ub294 \uc810\uc5d0\uc11c \uadfc\ubcf8\uc801\uc778 \ucc28\uc774\uac00 \uc788\ub2e4. \ub2e8\uc77c \ucf54\uc5b4\uc5d0\uc11c \ubcf5\uc218\uc758 \uc791\uc5c5(instruction)\uc744 \ubc88\uac08\uc544 \ucc98\ub9ac\ud558\ub294 \ub208\uc18d\uc784\uc774 \uc544\ub2c8\ub77c, \uac01 \uc791\uc5c5\uc744 \ub3c5\ub9bd\uc801\uc73c\ub85c \ud560\ub2f9\ud558\uc5ec \ub9d0 \uadf8\ub300\ub85c \ub3d9\uc2dc\uc5d0 \ucc98\ub9ac\ud558\ub294 \uac83\uc774 \ubcd1\ub82c \ucef4\ud4e8\ud305\uc774\ub2e4.</p> <p>OpenMP\ub97c \uc0ac\uc6a9\ud558\uba74 C/C++, Fortran \uc5b8\uc5b4\uc5d0\uc11c CPU \ubcd1\ub82c \ud504\ub85c\uadf8\ub798\ubc0d\uc744 \ube60\ub974\uac8c \uad6c\ud604\ud560 \uc218 \uc788\uc73c\uba70,  NVIDIA GPU \ud658\uacbd\uc5d0\uc11c \ud150\uc11c \uae30\ubc18 \ubcd1\ub82c \ud504\ub85c\uadf8\ub798\ubc0d\uc744 \uad6c\ud604\ud558\ub824\uba74 CUDA\ub97c \uc0ac\uc6a9\ud574\uc57c \ud55c\ub2e4.</p>"},{"location":"2024/06/24/openmp/","title":"OpenMP","text":"<p>OpenMP\ub97c \uc0ac\uc6a9\ud558\uba74 \ubcd1\ub82c \ud504\ub85c\uadf8\ub798\ubc0d \ucf54\ub4dc\ub97c \ube60\ub974\uace0 \uc9c1\uad00\uc801\uc73c\ub85c \uc791\uc131\ud560 \uc218 \uc788\ub2e4.</p>"},{"location":"2024/06/24/openmp/#parallel-construct","title":"Parallel construct","text":"<pre><code>#pragma omp parallel\n{\n    // enclosing block is parallel\n}\n</code></pre> <p><code>parallel</code> \ube14\ub85d \uc548\uc5d0 \uc791\uc131\ub41c \ucf54\ub4dc\ub294 <code>N</code> \uac1c\uc758 \uc4f0\ub808\ub4dc\uac00 \ub3d9\uc2dc\uc5d0 \ubcd1\ub82c\uc801\uc73c\ub85c \uc2e4\ud589\ud55c\ub2e4. \uc4f0\ub808\ub4dc \uac1c\uc218\ub294 \uc2e4\ud589 \ud658\uacbd\uc5d0 \ub530\ub77c \ub7f0\ud0c0\uc784\uc5d0\uc11c \uacb0\uc815\ub418\uc9c0\ub9cc <code>num_threads(N)</code> \uad6c\ubb38\uc744 \ucd94\uac00\ud558\uba74 \uc784\uc758\ub85c \uc815\ud560 \uc218 \uc788\ub2e4.</p>"},{"location":"2024/06/24/openmp/#loop-construct","title":"Loop construct","text":"<pre><code>#pragma omp parallel num_threads(5)\n#pragma omp for\nfor (int i = 0; i &lt; omp_get_num_threads(); ++i) {\n    // loop \ube14\ub85d\uc744 \uc2e4\ud589\uc911\uc778 \uc4f0\ub808\ub4dc\uc758 id\ub97c \uac00\uc838\uc634.\n    // \uac01 \uc21c\ud68c(iteration)\ub97c \ucc98\ub9ac\ud558\ub294 \uc4f0\ub808\ub4dc \uc21c\uc11c\ub294 \ube44\uacb0\uc815\uc801\uc774\ub2e4\n    int tid = omp_get_thread_num();\n    std::cout &lt;&lt; \"Hello from thread #\" &lt;&lt; tid &lt;&lt; endl;\n}\n\n// Output:\n// Hello from thread #3\n// Hello from thread #1\n// Hello from thread #2\n// Hello from thread #0\n// Hello from thread #4\n</code></pre> <p><code>#pragma omp for</code> \ub97c \uc0ac\uc6a9\ud558\uba74 for \ubc18\ubcf5\ubb38 \ub0b4\ubd80\uc5d0\uc11c \uc218\ud589\ub420 \uc791\uc5c5 \uc804\uccb4\ub97c \uac01 \uc4f0\ub808\ub4dc\uac00 \uade0\ub4f1\ud558\uac8c \ub9e1\uc544 \ucc98\ub9ac\ud558\ub3c4\ub85d OpenMP\uac00 \uc790\ub3d9\uc73c\ub85c \ucc98\ub9ac\ud55c\ub2e4.</p>"},{"location":"2024/06/24/openmp/#caveat","title":"Caveat","text":"<p>for \ube14\ub85d\uc744 \uc9c4\uc785\ud558\uba74 OpenMP\ub294 \u201c\uc874\uc7ac\ud558\ub294 \ubaa8\ub4e0 \uc4f0\ub808\ub4dc\uac00 idle \uc0c1\ud0dc\uc5d0 \uc788\ub2e4\u201d \uac00\uc815\ud558\uace0 \ubc18\ubcf5\ubb38 \uc791\uc5c5\uc744 \ubd84\ubc30\ud55c\ub2e4. \ub9cc\uc77c \uac19\uc740 parallel \ube14\ub85d \uc548\uc5d0\uc11c \ub2e4\ub978 \uc791\uc5c5\uc744 \uc218\ud589\ud558\ub294 \uc4f0\ub808\ub4dc\uac00 \uc874\uc7ac\ud558\uba74 \ud574\ub2f9 \uc791\uc5c5\uc774 \ub05d\ub098\uae30 \uc804\uae4c\uc9c0 for \ube14\ub85d \uc791\uc5c5\uc774 \uc885\ub8cc\ub418\uc9c0 \ubabb\ud558\uace0 \uc9c0\uccb4\ub418\ub294 \ubb38\uc81c\uac00 \ubc1c\uc0dd\ud558\ub294\ub370, \uc774 \uacbd\uc6b0 for construct\ub97c \uc0ac\uc6a9\ud558\uc9c0 \uc54a\uace0 \uc791\uc5c5\uc744 \uc9c1\uc811 \ubc30\ubd84\ud558\ub3c4\ub85d \ud558\uc790.</p> <p>Each work-distribution region must be encountered by all threads in the binding thread set or by none at all unless cancellation has been requested for the innermost enclosing parallel region.</p> <ul> <li>OpenMP Specification chapter 10</li> </ul> <pre><code>#pragma omp parallel\n{\n    #pragma omp single nowait\n    {\n        bool finish = false;\n\n        while (!finish) {\n            // \ubb34\uac70\uc6b4 \uc791\uc5c5 A\ub97c \uc218\ud589\ud558\ub294 \uc4f0\ub808\ub4dc 1\uac1c...\n            finish = work_A();\n        }\n    }\n\n    #pragma omp for\n    for (int i = 0; i &lt; 100; ++i) {\n        // \ud63c\uc790\uc11c \ube61\uc138\uac8c \uc77c\ud558\ub294 \uc4f0\ub808\ub4dc 1\uac1c\ub294 nowait \uad6c\ubb38\uc774 \uc788\uc74c\uc5d0\ub3c4 \ubd88\uad6c\ud558\uace0\n        // \uc791\uc5c5 A\uac00 \ub05d\ub098\uae30 \uc804\uae4c\uc9c0 \uc774\ucabd \ubc18\ubcf5\ubb38 \uc791\uc5c5\uc744 \uc218\ud589\ud560 \uc218 \uc5c6\ub2e4\n    }\n}\n</code></pre>"},{"location":"archive/2024/","title":"2024","text":""},{"location":"category/computer-science/","title":"Computer Science","text":""}]}